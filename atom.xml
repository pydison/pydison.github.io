<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pydison</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yulong.site/"/>
  <updated>2019-02-14T11:24:07.748Z</updated>
  <id>http://yulong.site/</id>
  
  <author>
    <name>pydison</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rrdtool的安装配置和使用</title>
    <link href="http://yulong.site/2019/02/14/rrdtool/"/>
    <id>http://yulong.site/2019/02/14/rrdtool/</id>
    <published>2019-02-13T16:00:00.000Z</published>
    <updated>2019-02-14T11:24:07.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装与卸载"><a href="#安装与卸载" class="headerlink" title="安装与卸载"></a>安装与卸载</h2><p><strong>安装依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cairo-devel libxml2-devel pango-devel pango libpng-devel freetype freetype-devel libart_lgpl-devel</span><br><span class="line">yum -y install perl-CPAN   #不装这个的话会报错 Can not locate ExtUtils/MakeMaker.pm</span><br></pre></td></tr></table></figure><p>去<a href="http://oss.oetiker.ch/rrdtool/pub/" target="_blank" rel="noopener">这里</a>现在最新的源码包，解压编译安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PKG_CONFIG_PATH=/usr/lib/pkgconfig/</span><br><span class="line">./configure -prefix=/usr/local/rrdtool</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/rrdtool/share/rrdtool/examples/</span><br><span class="line">./stripes.pl</span><br></pre></td></tr></table></figure><p>正常的话会生成一个png文件</p><p><img src="http://pydison.oss-cn-hangzhou.aliyuncs.com/pics/stripes.png" alt="rrdtool"></p><p><strong>卸载</strong></p><p>因为编译的时候指定了目录，所以直接删掉就可以了。<br>未指定的话，去源码目录下 <code>make uninstall</code></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>建立命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rrdtool create filename [--start|-b start time]</span><br><span class="line">                        [--step|-s step] </span><br><span class="line">                        [DS:ds-name:DST:dst arguments]  </span><br><span class="line">                        [RRA:CF:cf arguments]</span><br></pre></td></tr></table></figure><p>其中 filename 、DS 部分和 RRA 部分是必须的。其他两个参数可免。</p><p><strong>参数解释</strong></p><p><code>filename</code> ：默认是以 .rrd 结尾，但也以随你设定。<br><code>--step</code> ：步长，间隔多少秒<br><code>--start</code> ：起始时间，timestamp 的格式<br><code>DS</code> ：DS 用于定义 Data Soure 。用于存放脚本的结果.<br><code>DST</code> ：DST 就是 Data Source Type 的意思。数据类型有 COUNTER、GUAGE、DERIVE、ABSOLUTE、COMPUTE 5种。<br><code>RRA</code> ：RRA 用于指定数据如何存放。我们可以把一个RRA 看成一个表，各保存不同 interval 的统计结果<br><code>PDP</code> ：单独数据点。Primary Data Point 。正常情况下每个 interval RRDtool 都会收到一个值；RRDtool 在收到脚本给来的值后 会计算出另外一个值（例如平均值），这个值就是 PDP ；这个值代表的一般是“xxx/秒”的含义。<br><code>CF</code> ：CF 就是 Consolidation Function 的缩写。也就是合并（统计）功能。有 AVERAGE、MAX、MIN、LAST 四种。分别表示对多个PDP进行取平均、取最大值、取最小值、取当前值四种类型。<br><code>CDP</code> ：合并数据点。Consolidation Data Point 。RRDtool 使用多个 PDP 合并为（计算出）一个 CDP。也就是执行上面 的CF 操作后的结果。这个值就是存入 RRA 的数据，绘图时使用的也是这些数据。</p><p><strong>DST 详细说明</strong></p><p><code>COUNTER</code> ：必须是递增的，除非是计数器溢出（overflows）。在这种情况下，RRDtool 会自动修改收到的值。例如网络接口流量、收到的 packets 数量都属于这一类型。<br><code>DERIVE</code> ：和 COUNTER类似。但可以是递增，也可以递减，或者一会增加一会儿减少。<br><code>ABSOLUTE</code> ： 比较特殊，它每次都假定前一个interval的值是0，再计算平均值。<br><code>GAUGE</code> ：和上面三种不同，它没有“平均”的概念，RRDtool 收到值之后字节存入 RRA 中<br><code>COMPUTE</code> ： 比较特殊，它并不接受输入，它的定义是一个表达式，能够引用其他DS并自动计算出某个值。<br><code>AVERAGE</code> ：类型适合于看“平均”情况，例如一天的平均流量。所以 AVERAGE 适用于需要知道 ‘xxx/秒’ 这样的需求。但采用 AVERAGE 型时，你并不知道在每个 CDP 中（假设30分钟平均，6个PDP组成）之中，流量具体是如何变化的，什么时候高，什么时候低。这于需要用到别的统计类型了<br><code>MAXIMUM 、MINIMUM</code> ：最值<br><code>LAST</code> ：类型适用于 “累计”的概念，例如从xxx时候到目前共累计xxxx 这样的需求。</p><p><strong>常用命令</strong></p><p><code>first</code> 就是用于查看该 RRD 文件中某个 RRA 的第一个数据是在什么时候插入的（或者说第一次更新）；<br><code>last</code> 就是查看该 RRD 文件的最近一次更新；<br><code>info</code>就是查看 rrd 文件的结构信息。<br><code>update</code>插入数据，更新文件<br><code>updatev</code>同上，可视化操作<br><code>fetch</code>查询数据。</p><p><strong>info</strong></p><p>假如文件名是eth0.rrd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rrdtool info eth0.rrd</span><br><span class="line">   </span><br><span class="line">filename = &quot;eth0.rrd&quot;</span><br><span class="line">rrd_version = &quot;0003&quot;</span><br><span class="line">step = 300   # 每5分钟收到一个数据</span><br><span class="line">last_update = 1163862985</span><br><span class="line">ds[eth0_in].type = &quot;COUNTER&quot; # 有一个名为 eth0_in 的 DS，DST是 COUNTER</span><br><span class="line">ds[eth0_in].minimal_heartbeat = 600 # hearbeat 时间是600 秒</span><br><span class="line">rra[0].cf = &quot;AVERAGE&quot;   # 第一个 RRA 的编号是0，不是1。</span><br><span class="line">rra[0].rows = 600       # 共保存 600 个记录</span><br><span class="line">rra[0].pdp_per_row = 1  # 每个 CDP 由一个 PDP 统计得出</span><br><span class="line">rra[0].cdp_prep[0].value = NaN</span><br><span class="line">rra[0].cdp_prep[0].unknown_datapoints = 0</span><br><span class="line">rra[0].cdp_prep[1].value = NaN</span><br><span class="line">rra[0].cdp_prep[1].unknown_datapoints = 0</span><br><span class="line">rra[1].cf = &quot;AVERAGE&quot;  # 第二个 RRA 的编号是 1。同样也是 AVERAGE 型。</span><br><span class="line">rra[1].rows = 600      # 也是保存 600 个记录</span><br><span class="line">rra[1].pdp_per_row = 4 # 每个 CDP 由4个 PDP 的求平均值得出</span><br></pre></td></tr></table></figure><p><strong>updatev</strong></p><p>语法格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rrdtool &#123;update | updatev&#125; filename </span><br><span class="line">         [--template|-t ds-name[:ds-name]...]</span><br><span class="line">         N|timestamp:value[:value...] </span><br><span class="line">         at-timestamp@value[:value...]</span><br><span class="line">         [timestamp:value[:value...] ...]</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root]# rrdtool last eth0.rrd</span><br><span class="line">1163864400</span><br><span class="line">[root]#</span><br><span class="line">[root]# rrdtool update eth0.rrd 1163864700:3000:4000</span><br><span class="line">[root]# rrdtool updatev eth0.rrd 1163865000:3300:4600</span><br><span class="line">return_value = 0</span><br><span class="line">[1163865000]RRA[AVERAGE][1]DS[eth0_in] = 1.0000000000e+00</span><br><span class="line">[1163865000]RRA[AVERAGE][1]DS[eth0_out] = 2.0000000000e+00</span><br></pre></td></tr></table></figure><p>return value 0 表示成功，1表示失败<br>COUNTER 型的 DS会对数据进行合并运算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（3300-3000）/step（300）=1</span><br><span class="line">（4600-4000）/step（300）=2</span><br></pre></td></tr></table></figure><p><strong>fetch</strong></p><p>语法格式</p><pre><code>rrdtool fetch filename CF [--resolution|-r resolution] [--start|-s start] [--end|-e end]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装与卸载&quot;&gt;&lt;a href=&quot;#安装与卸载&quot; class=&quot;headerlink&quot; title=&quot;安装与卸载&quot;&gt;&lt;/a&gt;安装与卸载&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;安装依赖&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装python3.7</title>
    <link href="http://yulong.site/2019/02/13/python3.7/"/>
    <id>http://yulong.site/2019/02/13/python3.7/</id>
    <published>2019-02-12T16:00:00.000Z</published>
    <updated>2019-02-14T11:23:43.421Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>一般来说，centos自带的是python2.6<br>升级python之前，先准备好环境，安装一些必要的包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;Development Tools&quot;</span><br><span class="line">yum install readline readline-devel zlib* bzip2-devel ncurses-devel sqlite-devel libffi-devel -y</span><br></pre></td></tr></table></figure><p>重点准备ssl库:下载libreSSL源码包，并解压编译安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.9.0.tar.gz</span><br><span class="line">tar -xvf libressl-2.9.0.tar.gz</span><br><span class="line">yum erase openssl-devel</span><br><span class="line">cd libressl-2.9.0</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">openssl version</span><br></pre></td></tr></table></figure><p>这时候虽然装好了，但是系统还未识别，需要专门改一下配置<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ld.so.conf.d/libressl-2.9.0.conf</span><br></pre></td></tr></table></figure><p></p><p>将libssl库安装路径加入文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/lib</span><br></pre></td></tr></table></figure><p></p><p>保存，并重新加载库文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure><p></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>官网下载源码包，并解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz</span><br><span class="line">tar -xvf Python-3.7.2.tar.xz</span><br></pre></td></tr></table></figure><p>去python源码包目录，vim Modules/Setup.dist,去掉以下内容的注释<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SSL=/usr/local  #注意这里的路径，如果不一样，请改成这个</span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">        -DUSE_SSLexport LDFLAGS=&quot;-L/usr/local/lib&quot; -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line">        -L$(SSL)/lib -lssl -lcrypto</span><br></pre></td></tr></table></figure><p></p><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h2&gt;&lt;p&gt;一般来说，centos自带的是python2.6&lt;br&gt;升级python之前，先准备好环境，安装一些必要的包&lt;/p&gt;&lt;fig
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux系统磁盘分区挂载</title>
    <link href="http://yulong.site/2019/02/12/fdisk/"/>
    <id>http://yulong.site/2019/02/12/fdisk/</id>
    <published>2019-02-11T16:00:00.000Z</published>
    <updated>2019-02-14T11:23:20.493Z</updated>
    
    <content type="html"><![CDATA[<p>首先看新磁盘的基本情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p>输出如下</p><p><img src="http://pydison.oss-cn-hangzhou.aliyuncs.com/pics/fdisk1.png" alt=""></p><h2 id="给磁盘分区"><a href="#给磁盘分区" class="headerlink" title="给磁盘分区"></a>给磁盘分区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure><p>fdisk参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p、打印分区表。</span><br><span class="line">n、新建一个新分区。</span><br><span class="line">d、删除一个分区。</span><br><span class="line">q、退出不保存。</span><br><span class="line">w、把分区写进分区表，保存并退出</span><br></pre></td></tr></table></figure><p>依次按照提示输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n</span><br><span class="line">p</span><br><span class="line">1 (第几个分区就写几)</span><br><span class="line">默认</span><br><span class="line">大小（比如   +100G）</span><br></pre></td></tr></table></figure><p>这样，第一个分区就分好了，大小100G。后面的分区如法炮制。</p><p>如果要删除分区的话，一次按照提示输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d</span><br><span class="line">p</span><br><span class="line">3（最后一个分区的数字，因为要从后往前删）</span><br></pre></td></tr></table></figure><h2 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h2><p>检查分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/dev/sdb1 bs=1M count=128</span><br><span class="line">dd if=/dev/zero of=/dev/sdb2 bs=1M count=128</span><br><span class="line">dd if=/dev/zero of=/dev/sdb3 bs=1M count=128</span><br></pre></td></tr></table></figure><p>格式化分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdb1</span><br><span class="line">mkfs.ext4 /dev/sdb2</span><br><span class="line">mkfs.ext4 /dev/sdb3</span><br></pre></td></tr></table></figure><h2 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h2><p>建立文件夹。比如我们以如下方式挂载<br>sdb1挂载到 <code>/var/www/html</code><br>sdb2挂载到 <code>/var/lib/mysql</code><br>sdb3挂载到 <code>/backup</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb3 /backup</span><br><span class="line">mount /dev/sdb2 /var/lib/mysql</span><br><span class="line">mount /dev/sdb1 /var/www/html</span><br></pre></td></tr></table></figure><p>写入分区表<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;/dev/sdb1  /var/www/html ext4    defaults    0  0&apos; &gt;&gt; /etc/fstab</span><br><span class="line">echo &apos;/dev/sdb2  /var/lib/mysql ext4    defaults    0  0&apos; &gt;&gt; /etc/fstab</span><br><span class="line">echo &apos;/dev/sdb3  /backup ext4    defaults    0  0&apos; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p></p><p>查看分区情况 <code>df -h</code></p><p><img src="http://pydison.oss-cn-hangzhou.aliyuncs.com/pics/fdisk2.png" alt="此处输入图片的描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先看新磁盘的基本情况&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>coolq的安装和使用</title>
    <link href="http://yulong.site/2019/02/11/coolq/"/>
    <id>http://yulong.site/2019/02/11/coolq/</id>
    <published>2019-02-10T16:00:00.000Z</published>
    <updated>2019-02-14T11:28:44.335Z</updated>
    
    <content type="html"><![CDATA[<p>1.安装docker并启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-io</span><br><span class="line">service docker start</span><br></pre></td></tr></table></figure><p>2.安装coolq<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir coolq</span><br><span class="line">docker pull richardchien/cqhttp:latest</span><br><span class="line"></span><br><span class="line">docker run -ti -d --name cqhttp-test -v $(pwd)/coolq:/home/user/coolq -p 9000:9000  -p 5700:5700   -e COOLQ_ACCOUNT=qq号 -e CQHTTP_POST_URL=http://日志上传到的服务器:端口  -e CQHTTP_SERVE_DATA_FILES=yes richardchien/cqhttp:latest</span><br></pre></td></tr></table></figure><p></p><p>3.去web服务页面登录qq并开启各个插件服务</p><p>4.修改配置并重启</p><p><code>vim /root/coolq/app/io.github.richardchien.coolqhttpapi/config/qq号.ini</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[1794450048]</span><br><span class="line">host = 0.0.0.0  【这里大坑，之前默认是ipv6的格式】</span><br><span class="line">port = 5700</span><br><span class="line">serve_data_files = yes</span><br><span class="line">post_url = http://日志上传的服务器:端口</span><br></pre></td></tr></table></figure><p>5.编写自己的服务，针对qq消息做发布或者接受行为，并部署在 日志上传的服务器:端口</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.安装docker并启动&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache部署python框架web项目</title>
    <link href="http://yulong.site/2019/02/10/apache-mod-wsgi/"/>
    <id>http://yulong.site/2019/02/10/apache-mod-wsgi/</id>
    <published>2019-02-09T16:00:00.000Z</published>
    <updated>2019-02-14T11:30:42.423Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装Apache和mod_wsgi</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br><span class="line">yum install mod_wsgi</span><br></pre></td></tr></table></figure><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><p><strong>配置wsgi.conf</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf.d/wsgi.conf</span><br></pre></td></tr></table></figure><p></p><p>配置清单1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LoadModule wsgi_module modules/mod_wsgi.so</span><br><span class="line"></span><br><span class="line">WSGIScriptAlias / &quot;/var/www/html/5/tiejie/wsgi.py&quot;</span><br><span class="line"></span><br><span class="line">&lt;Directory &quot;/var/www/html/5/tiejie&quot;&gt;</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>配置里分别指定了mod_wsgi的执行文件，mod_wsgi的配置文件，网站文件夹的存放位置。<br>这里路径一定要匹配正确。<br>大体上是对mod_wsgi的配置，apache的工作路径已经在主配置文档里固定好了。这是和nginx的区别之一。</p><p><strong>配置wsgi.py</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">sys.path.append(&apos;/var/www/html/5/tiejie&apos;)</span><br><span class="line">sys.path.append(&apos;/var/www/html/5&apos;)</span><br><span class="line">os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;settings&quot;)</span><br><span class="line"></span><br><span class="line">from django.core.wsgi import get_wsgi_application</span><br><span class="line">application = get_wsgi_application()</span><br></pre></td></tr></table></figure><p>这里的配置文件和N+U的配置基本一致。</p><p><strong>配置静态文件</strong></p><p>如果现在启动服务，网站是可以运行的，只是css+js+img都会失效。我们要想办法让主程序找到静态文件的位置。<br>处理这种事儿，在生产环境中，最好交给webserver，这里就由apache负责了。</p><p>对配置清单 1 扩充：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Alias /static &quot;/var/www/html/5/static&quot;</span><br><span class="line">&lt;Directory &quot;/static&quot;&gt;</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">Alias /media &quot;/var/www/html/5/media&quot;</span><br><span class="line">&lt;Directory &quot;/meidia&quot;&gt;</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>配置phpmyadmin</strong></p><p>这个服务也是需要apache的，怎样使服务和网站不冲突而能正常使用呢？<br>其实同上理，在配置单 1 里指定路径就可以了。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Alias /phpmy &quot;/var/www/html/phpMyAdmin&quot;</span><br><span class="line">&lt;Directory &quot;/var/www/html/phpMyAdmin&quot;&gt;</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p></p><p>启动生产环境 <code>service httpd start</code>,从浏览器输入主机名，可以看到网页了哦。</p><h2 id="bottle"><a href="#bottle" class="headerlink" title="bottle"></a>bottle</h2><p>在 <code>/var/www/bottle-app/</code> 新建文件</p><p>app.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from bottle import route, run</span><br><span class="line">@route(&apos;/&apos;)</span><br><span class="line">def index():</span><br><span class="line">    return &apos;Hello!&apos;</span><br></pre></td></tr></table></figure><p>service.wsgi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import os,sys,bottle</span><br><span class="line">sys.path = [&apos;/var/www/bottle-app/&apos;] + sys.path</span><br><span class="line">os.chdir(os.path.dirname(__file__))</span><br><span class="line">import app</span><br><span class="line">application = bottle.default_app()</span><br></pre></td></tr></table></figure><p>编辑Apache的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WSGIScriptAlias /bottle /var/www/bottle-app/service.wsgi</span><br><span class="line">WSGIScriptReloading On</span><br><span class="line">&lt;Directory /var/www/bottle-app&gt;</span><br><span class="line">    Order deny,allow</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="Flask"><a href="#Flask" class="headerlink" title="Flask"></a>Flask</h2><p>在 <code>/var/www/flask-app</code> 新建文件</p><p>myapp.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&quot;/&quot;)</span><br><span class="line">def hello():</span><br><span class="line">    return &quot;Hello World!&quot;</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>编写service.wsgi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">sys.path.insert(0, &apos;/var/www/flask-app&apos;)</span><br><span class="line">from myapp import app as application</span><br></pre></td></tr></table></figure><p>编辑Apache配置文件与bottle完全同理，此处略过</p><h2 id="web-py"><a href="#web-py" class="headerlink" title="web.py"></a>web.py</h2><p>用pip2.7安装web.py,并做好相关配置。</p><p>在<code>/var/www/webpy-app/</code>目录新建文件</p><p>code.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import web</span><br><span class="line">urls = (</span><br><span class="line">    &apos;/.*&apos;, &apos;hello&apos;,</span><br><span class="line">    )</span><br><span class="line">class hello:</span><br><span class="line">    def GET(self):</span><br><span class="line">        return &quot;Hello, world.&quot;</span><br><span class="line">application = web.application(urls, globals()).wsgifunc()</span><br></pre></td></tr></table></figure><p>在Apache配置文件加入如下一段代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LoadModule wsgi_module modules/mod_wsgi-py27.so</span><br><span class="line">WSGIScriptAlias /webpy /var/www/webpy-app/code.py/</span><br><span class="line">Alias /webpy/static /var/www/webpy-app/static/</span><br><span class="line">AddType text/html .py</span><br><span class="line">&lt;Directory /var/www/webpy-app/&gt;</span><br><span class="line">    Order deny,allow</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;安装Apache和mod_wsgi&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nginx部署python框架web项目</title>
    <link href="http://yulong.site/2019/02/09/nginx-uwsgi/"/>
    <id>http://yulong.site/2019/02/09/nginx-uwsgi/</id>
    <published>2019-02-08T16:00:00.000Z</published>
    <updated>2019-02-14T11:28:29.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装nginx和uwsgi"><a href="#安装nginx和uwsgi" class="headerlink" title="安装nginx和uwsgi"></a>安装nginx和uwsgi</h2><p>下载并安装nginx的yum包：</p><ul><li>6.0以上的系统 <a href="http://pydison.oss-cn-hangzhou.aliyuncs.com/files/nginx-release-centos-6-0.el6.ngx.noarch.rpm" target="_blank" rel="noopener">地址一</a> <a href="http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm" target="_blank" rel="noopener">地址二</a></li><li>5.X的系统 <a href="http://nginx.org/packages/centos/5/noarch/RPMS/nginx-release-centos-5-0.el5.ngx.noarch.rpm" target="_blank" rel="noopener">地址</a></li></ul><p>然后执行命令清单 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br><span class="line">pip install uwsgi</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>基本配置如下，可以看到，</p><ul><li><code>location /</code> 全权交给了uwsgi处理。boss不必亲自对项目动手。</li><li><code>location /media/</code> 和 <code>location /static/</code> 静态文件交给谁都可以，但是让boss亲自处理是最简单的方式。</li><li>路径随意设置，但一定要匹配正确</li></ul><p>配置清单 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen       80;</span><br><span class="line">server_name  localhost;</span><br><span class="line">charset utf-8;</span><br><span class="line">access_log  /var/log/nginx/log/host.access.log  main; </span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    uwsgi_pass 127.0.0.1:8077;</span><br><span class="line">    uwsgi_read_timeout 2;</span><br><span class="line">    include /etc/nginx/uwsgi_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /media/  &#123;</span><br><span class="line">    alias /root/tietest/media/;</span><br><span class="line">&#125;</span><br><span class="line">location /static/  &#123;</span><br><span class="line">    alias /root/tietest/static/;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置uwsgi"><a href="#配置uwsgi" class="headerlink" title="配置uwsgi"></a>配置uwsgi</h2><p>给uwsgi写个任务单，让他知道该去哪儿干些什么。这个任务单可以有好几种方式，这里选个最简单的：<br>在项目根目录写个 ini文件，命名<code>jie.ini</code></p><p>配置清单 2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">vhost = false</span><br><span class="line">plugins = python</span><br><span class="line">socket = 127.0.0.1:8077</span><br><span class="line">master = true</span><br><span class="line">enable-threads = true</span><br><span class="line">workers = 1</span><br><span class="line">wsgi-file = /root/tietest/tiejie/wsgi.py</span><br><span class="line">chdir = /root/tietest</span><br></pre></td></tr></table></figure><p>最重要的当然是那个wsgi.py文件。下一步就是配置这个。</p><h2 id="配置wsgi-py"><a href="#配置wsgi-py" class="headerlink" title="配置wsgi.py"></a>配置wsgi.py</h2><p>这东西是Web服务器网关接口，可以理解为这个项目的的秘书。nginx和项目会谈，只需两个秘书相见就可以了。</p><p>配置清单 3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">sys.path.append(&apos;/root/tietest/tiejie&apos;)</span><br><span class="line">sys.path.append(&apos;/root/tietest&apos;)</span><br><span class="line">os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;settings&quot;)</span><br><span class="line">from django.core.wsgi import get_wsgi_application</span><br><span class="line">application = get_wsgi_application()</span><br></pre></td></tr></table></figure><h2 id="启动生产环境"><a href="#启动生产环境" class="headerlink" title="启动生产环境"></a>启动生产环境</h2><p>只要配置无误，然后启动nginx和uwsgi服务就可以了。<br>命令清单 2<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service nginx start</span><br><span class="line">uwsgi --ini /root/tietest/jie.ini</span><br></pre></td></tr></table></figure><p></p><p>从浏览器输入主机名，可以看到网页了哦。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装nginx和uwsgi&quot;&gt;&lt;a href=&quot;#安装nginx和uwsgi&quot; class=&quot;headerlink&quot; title=&quot;安装nginx和uwsgi&quot;&gt;&lt;/a&gt;安装nginx和uwsgi&lt;/h2&gt;&lt;p&gt;下载并安装nginx的yum包：&lt;/p&gt;&lt;ul&gt;&lt;l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建git服务器</title>
    <link href="http://yulong.site/2019/02/08/git-server/"/>
    <id>http://yulong.site/2019/02/08/git-server/</id>
    <published>2019-02-08T05:37:29.141Z</published>
    <updated>2019-02-08T05:37:29.141Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h2><p>安装git并建立git用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line">useradd git</span><br></pre></td></tr></table></figure><p>任选目录，建立git空仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd srv</span><br><span class="line">git init --bare tietest</span><br></pre></td></tr></table></figure><p>给目录配置权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git tietest</span><br></pre></td></tr></table></figure><p>建立用户校验文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">mkdir .ssh</span><br><span class="line">touch authorized_keys</span><br></pre></td></tr></table></figure><hr><h2 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h2><p>配置用户信息。如下，请替换成自己的名字和邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;pydison&quot;</span><br><span class="line">git config --global user.email pydison@gmail.com</span><br></pre></td></tr></table></figure><p>配置校验码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &apos;pydison@gmail.com&apos;</span><br></pre></td></tr></table></figure><p>一路回车就可以，看到类似如下返回，说明已经生成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|            o.Eo+|</span><br><span class="line">|           . . oo|</span><br><span class="line">|              . .|</span><br><span class="line">|             .o+ |</span><br><span class="line">|        S   .+..o|</span><br><span class="line">|       .   .= ...|</span><br><span class="line">|        . .+ o =.|</span><br><span class="line">|         .. o . =|</span><br><span class="line">|           .   . |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure><hr><h2 id="写入用户校验码"><a href="#写入用户校验码" class="headerlink" title="写入用户校验码"></a>写入用户校验码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /root/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>将内容复制到服务端的<code>authorized_keys</code>文件中。如果有多个客户端，请一行一个。<br>之后就可以去客户端使用了。<br>比如服务器地址是<code>115.29.234.224</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@115.29.234.224:/srv/tietest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配置服务端&quot;&gt;&lt;a href=&quot;#配置服务端&quot; class=&quot;headerlink&quot; title=&quot;配置服务端&quot;&gt;&lt;/a&gt;配置服务端&lt;/h2&gt;&lt;p&gt;安装git并建立git用户&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建svn服务器</title>
    <link href="http://yulong.site/2019/02/03/svn-server/"/>
    <id>http://yulong.site/2019/02/03/svn-server/</id>
    <published>2019-02-03T12:09:37.599Z</published>
    <updated>2019-02-03T12:09:37.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装svn"><a href="#安装svn" class="headerlink" title="安装svn"></a>安装svn</h2><p><code>yum install svn</code></p><hr><h2 id="创建svn版本库"><a href="#创建svn版本库" class="headerlink" title="创建svn版本库"></a>创建svn版本库</h2><p>这里，打算把所有的版本库都放到svns目录下，其中一个版本库叫tiejie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/svns</span><br><span class="line">svnadmin create /root/svns/tiejie</span><br></pre></td></tr></table></figure><hr><h2 id="配置svn"><a href="#配置svn" class="headerlink" title="配置svn"></a>配置svn</h2><p>在版本库目录下，ls 可以看到生成了以下文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tiejie/</span><br><span class="line">├── conf</span><br><span class="line">│   ├── authz         ：权限配置文件</span><br><span class="line">│   ├── passwd        ：密码配置文件</span><br><span class="line">│   └── svnserve.conf ：svn服务配置文件</span><br><span class="line">├── db</span><br><span class="line">以下略</span><br></pre></td></tr></table></figure><p>authz文件配置示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[groups]</span><br><span class="line">admins = harry,sally             #admins组</span><br><span class="line">normals1 = harry,sally,&amp;joe      #normals1组</span><br><span class="line">normals2 = wangfugui,zhangdabing</span><br><span class="line"></span><br><span class="line">[/]                              #svn服务根目录，这里对应/root/svns/</span><br><span class="line">harry = rw                       #对用户设置权限</span><br><span class="line">@admins = rw                     #对组设置权限</span><br><span class="line">* =                              #默认权限</span><br><span class="line"></span><br><span class="line">[tiejie:/]                       #单个版本库目录，这里对应 /root/svns/tiejie/</span><br><span class="line">@normals1 = rw                   #组权限</span><br><span class="line">* = r</span><br></pre></td></tr></table></figure><p>passwd文件配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[users]</span><br><span class="line">wangfugui = ligoudan</span><br></pre></td></tr></table></figure><p>svnserve.conf 配置示例<br>基本上把双列注释的井号去掉就差不多了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[general]</span><br><span class="line">anon-access = read</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line">authz-db = authz</span><br></pre></td></tr></table></figure><hr><h2 id="启动svn服务"><a href="#启动svn服务" class="headerlink" title="启动svn服务"></a>启动svn服务</h2><p><code>svnserve -d -r /root/svns</code> #-d指后台运行,-r指定目录</p><p>停止服务的话，杀掉进程就可以了。</p><hr><h2 id="客户端连接此svn服务器"><a href="#客户端连接此svn服务器" class="headerlink" title="客户端连接此svn服务器"></a>客户端连接此svn服务器</h2><p>比如这台服务器网址是<code>115.28.143.71</code>，那么我在客户端上执行的命令是<code>svn co svn://115.28.143.71/tiejie</code>.</p><p>在本文配置中，陌生用户有读权限，所以很容易就check到本地了。<br>然后提交新版本的时候，就需要确认用户了。这里我们以wangfugui这个用户为例。</p><p><img src="http://pydison.oss-cn-hangzhou.aliyuncs.com/pics/svn.png" alt="svn连接"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装svn&quot;&gt;&lt;a href=&quot;#安装svn&quot; class=&quot;headerlink&quot; title=&quot;安装svn&quot;&gt;&lt;/a&gt;安装svn&lt;/h2&gt;&lt;p&gt;&lt;code&gt;yum install svn&lt;/code&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2 id=&quot;创建svn版本库&quot;&gt;&lt;a h
      
    
    </summary>
    
    
  </entry>
  
</feed>
